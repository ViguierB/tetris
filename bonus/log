==25767== Memcheck, a memory error detector
==25767== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==25767== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==25767== Command: ./menu
==25767== Parent PID: 22549
==25767== 
==25767== Invalid read of size 1
==25767==    at 0x404C5B: check_rl (tetrimino_ext.c:29)
==25767==    by 0x404D5D: multi_check (tetrimino_ext.c:47)
==25767==    by 0x404EF2: tetrims_check (tetrimino_ext.c:76)
==25767==    by 0x405510: get_all_tetriminos (tetrimino.c:117)
==25767==    by 0x401A09: create_tetris (main.c:51)
==25767==    by 0x403FBF: ntetris (prints.c:53)
==25767==    by 0x401AA4: main (main.c:65)
==25767==  Address 0x5882b5f is 1 bytes before a block of size 3 alloc'd
==25767==    at 0x4C2B10F: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==25767==    by 0x406E59: my_strdup (my_basic_funct.c:18)
==25767==    by 0x405BE5: my_split (my_split.c:49)
==25767==    by 0x405179: set_sharp (tetrimino.c:22)
==25767==    by 0x4053C2: open_tetrimino (tetrimino.c:77)
==25767==    by 0x4054B6: get_all_tetriminos (tetrimino.c:112)
==25767==    by 0x401A09: create_tetris (main.c:51)
==25767==    by 0x403FBF: ntetris (prints.c:53)
==25767==    by 0x401AA4: main (main.c:65)
==25767== 
==25767== Invalid read of size 1
==25767==    at 0x405749: rtrim (utils.c:16)
==25767==    by 0x404CAF: check_rl (tetrimino_ext.c:33)
==25767==    by 0x404D5D: multi_check (tetrimino_ext.c:47)
==25767==    by 0x404EF2: tetrims_check (tetrimino_ext.c:76)
==25767==    by 0x405510: get_all_tetriminos (tetrimino.c:117)
==25767==    by 0x401A09: create_tetris (main.c:51)
==25767==    by 0x403FBF: ntetris (prints.c:53)
==25767==    by 0x401AA4: main (main.c:65)
==25767==  Address 0x5882b5f is 1 bytes before a block of size 3 alloc'd
==25767==    at 0x4C2B10F: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==25767==    by 0x406E59: my_strdup (my_basic_funct.c:18)
==25767==    by 0x405BE5: my_split (my_split.c:49)
==25767==    by 0x405179: set_sharp (tetrimino.c:22)
==25767==    by 0x4053C2: open_tetrimino (tetrimino.c:77)
==25767==    by 0x4054B6: get_all_tetriminos (tetrimino.c:112)
==25767==    by 0x401A09: create_tetris (main.c:51)
==25767==    by 0x403FBF: ntetris (prints.c:53)
==25767==    by 0x401AA4: main (main.c:65)
==25767== 
==25767== Invalid read of size 4
==25767==    at 0x40155D: print_pts (choose_tetrimino.c:58)
==25767==    by 0x4028BD: playing (play.c:102)
==25767==    by 0x403FE6: ntetris (prints.c:54)
==25767==    by 0x401AA4: main (main.c:65)
==25767==  Address 0x588bab8 is 8 bytes before a block of size 192 alloc'd
==25767==    at 0x4C2B10F: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==25767==    by 0x40557E: get_all_pts (tetrims_transf.c:25)
==25767==    by 0x4056AC: set_tetrimino_pts (tetrims_transf.c:52)
==25767==    by 0x401A75: create_tetris (main.c:59)
==25767==    by 0x403FBF: ntetris (prints.c:53)
==25767==    by 0x401AA4: main (main.c:65)
==25767== 
==25767== Invalid read of size 4
==25767==    at 0x40158A: print_pts (choose_tetrimino.c:57)
==25767==    by 0x4028BD: playing (play.c:102)
==25767==    by 0x403FE6: ntetris (prints.c:54)
==25767==    by 0x401AA4: main (main.c:65)
==25767==  Address 0x588babc is 4 bytes before a block of size 192 alloc'd
==25767==    at 0x4C2B10F: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==25767==    by 0x40557E: get_all_pts (tetrims_transf.c:25)
==25767==    by 0x4056AC: set_tetrimino_pts (tetrims_transf.c:52)
==25767==    by 0x401A75: create_tetris (main.c:59)
==25767==    by 0x403FBF: ntetris (prints.c:53)
==25767==    by 0x401AA4: main (main.c:65)
==25767== 
==25767== 
==25767== More than 10000000 total errors detected.  I'm not reporting any more.
==25767== Final error counts will be inaccurate.  Go fix your program!
==25767== Rerun with --error-limit=no to disable this cutoff.  Note
==25767== that errors may occur in your program without prior warning from
==25767== Valgrind, because errors are no longer being displayed.
==25767== 
==25767== 
==25767== HEAP SUMMARY:
==25767==     in use at exit: 342,036 bytes in 662 blocks
==25767==   total heap usage: 801 allocs, 139 frees, 363,514 bytes allocated
==25767== 
==25767== LEAK SUMMARY:
==25767==    definitely lost: 64,125 bytes in 103 blocks
==25767==    indirectly lost: 6,158 bytes in 34 blocks
==25767==      possibly lost: 1,538 bytes in 1 blocks
==25767==    still reachable: 270,215 bytes in 524 blocks
==25767==         suppressed: 0 bytes in 0 blocks
==25767== Rerun with --leak-check=full to see details of leaked memory
==25767== 
==25767== For counts of detected and suppressed errors, rerun with: -v
==25767== ERROR SUMMARY: 10000000 errors from 4 contexts (suppressed: 0 from 0)
